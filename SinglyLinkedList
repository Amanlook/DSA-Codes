class Node:
    def __init__(self, value=None):
        self.value = value
        self.next = None

class SinglyLinkedList:

    def __init__(self):
        self.head = None
        self.tail = None

    def __iter__(self):
        n = self.head
        while n:
            yield n
            n = n.next
    
    def insertSLL(self, value, location=0):
        new_node = Node(value)
        if self.head is None:
            self.head = new_node
            self.tail = new_node
        else:
            if location == 0:
                new_node.next = self.head
                self.head = new_node
            elif location == 1:
                new_node.next = None
                self.tail.next = new_node
                self.tail = new_node
            else:
                node = self.head
                count = 0
                while count < location - 1:
                    node = node.next
                    count += 1
                tempNode = node.next
                node.next = new_node
                new_node.next = tempNode

    def traverseSLL(self):
        if self.head is None:
            print("List is empty")
        else:
            node = self.head
            while node is not None:
                print(node.value)
                node = node.next

    def searchSLL(self, value):
        if self.head is None:
            print("List is empty")
        else:
            node = self.head
            count = 0
            while node is not None:
                if node.value == value:
                    print(count)
                    break
                count += 1
                node = node.next
    def headEqualTail(self):
        self.head = None
        self.tail = None

    def deleteSSL(self, location):
        if self.head is None:
            print("list is empty")
        else:
            if location == 0:
                if self.head == self.tail:
                    self.headEqualTail()
                else:
                    self.head = self.head.next
            elif location == 1:
                if self.head == self.tail:
                    self.headEqualTail()
                else:
                    node = self.head
                    while node is not None:
                        if node.next is self.tail:
                            break
                        node = node.next
                    node.next = None
                    self.tail = node
            else:
                node = self.head
                counter = 0
                while counter < location - 1:
                    node = node.next
                    counter += 1
                nextNode = node.next
                node.next = nextNode.next



s = SinglyLinkedList()
s.insertSLL(1,0)
s.insertSLL(3,0)
s.insertSLL(4,1)
s.insertSLL(5,0)
s.insertSLL(9,3)
# s.traverseSLL()
# s.searchSLL(9)
# s.deleteSSL(1)

print([node.value for node in s])



